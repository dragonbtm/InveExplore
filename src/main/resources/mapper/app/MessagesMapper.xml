<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chain.modules.app.dao.MessagesMapper" >
  <resultMap id="BaseResultMap" type="com.chain.modules.app.entity.Messages" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="runTime" property="runtime" jdbcType="VARCHAR" />
    <result column="shardNumber" property="shardnumber" jdbcType="VARCHAR" />
    <result column="tps" property="tps" jdbcType="VARCHAR" />
    <result column="userCount" property="usercount" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, runTime, shardNumber, tps, userCount, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from db_messages
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from db_messages
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.chain.modules.app.entity.Messages" >
    insert into db_messages (id, runTime, shardNumber, 
      tps, userCount, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{runtime,jdbcType=VARCHAR}, #{shardnumber,jdbcType=VARCHAR}, 
      #{tps,jdbcType=VARCHAR}, #{usercount,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chain.modules.app.entity.Messages" >
    insert into db_messages
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="runtime != null" >
        runTime,
      </if>
      <if test="shardnumber != null" >
        shardNumber,
      </if>
      <if test="tps != null" >
        tps,
      </if>
      <if test="usercount != null" >
        userCount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="runtime != null" >
        #{runtime,jdbcType=VARCHAR},
      </if>
      <if test="shardnumber != null" >
        #{shardnumber,jdbcType=VARCHAR},
      </if>
      <if test="tps != null" >
        #{tps,jdbcType=VARCHAR},
      </if>
      <if test="usercount != null" >
        #{usercount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chain.modules.app.entity.Messages" >
    update db_messages
    <set >
      <if test="runtime != null" >
        runTime = #{runtime,jdbcType=VARCHAR},
      </if>
      <if test="shardnumber != null" >
        shardNumber = #{shardnumber,jdbcType=VARCHAR},
      </if>
      <if test="tps != null" >
        tps = #{tps,jdbcType=VARCHAR},
      </if>
      <if test="usercount != null" >
        userCount = #{usercount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chain.modules.app.entity.Messages" >
    update db_messages
    set runTime = #{runtime,jdbcType=VARCHAR},
      shardNumber = #{shardnumber,jdbcType=VARCHAR},
      tps = #{tps,jdbcType=VARCHAR},
      userCount = #{usercount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>